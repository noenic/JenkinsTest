pipeline {
    agent none

    stages {
        stage('Build and Test on Worker') {
            agent {
                label 'worker'
            }
            steps {
                script {
                    // Étape 0 : Installation des dépendances
                    sh 'pip3 install -r requirements.txt'

                    try {
                        // Étape 1 : Lancer le serveur Flask main.py
                        sh 'python3 src/main.py &'
                        
                        // Attendre un peu pour que le serveur démarre (ajuster si nécessaire)
                        sleep time: 5, unit: 'SECONDS'
                        
                        // Étape 2 : Exécuter les tests de l'application (test.py)
                        sh 'python3 src/test.py'
                        
                        // Étape 3 : Arrêter le serveur Flask
                        sh 'pkill -f main.py'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'  // Marquer le build comme échoué
                        error('Échec d\'une étape,donc arrêt du pipeline.')  // Arrêter le pipeline
                    }
                }
            }
            post {
                success {
                    // Étape 4 : Build du Dockerfile
                    sh 'docker build -t pythonapi:latest .'
                }
                failure {
                    error('Les tests ont échoué, arrêt du pipeline.')
                }
            }
        }

        stage('Verify Docker Image') {
            agent {
                label 'worker'
            }
            steps {
                script {
                    // Étape 5 : Vérifier que le Dockerfile fonctionne
                    try {
                        sh 'docker run --rm pythonapi:latest -e API_VERSION=1.0.1'
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'  // Marquer le build comme échoué
                        error('Échec d\'une étape, arrêt du pipeline.')  // Arrêter le pipeline
                    }
                }
            }
        }
    }
}
