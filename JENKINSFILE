pipeline {
    agent none

    stages {
        stage('Build and Test on Worker') {
            agent {
                label 'worker'
            }
            steps {
                script {
                    // Etape 0 : installation des dépendances
                    sh 'pip install -r requirements.txt'

                    // Étape 1 : Lancer le serveur Flask main.py
                    sh 'python src/main.py &'
                    
                    // Attendre un peu pour que le serveur démarre (ajuster si nécessaire)
                    sleep time: 5, unit: 'SECONDS'
                    
                    // Étape 2 : Exécuter les tests de l'application (test.py)
                    sh 'python src/test.py'
                    
                    // Étape 3 : Arrêter le serveur Flask
                    sh 'pkill -f main.py'
                }
            }
            post {
                success {
                    // Étape 4 : Build du Dockerfile
                    sh 'docker build -t pythonapi:latest .'
                }
                failure {
                    error('Les tests ont échoué, arrêt du pipeline.')
                }
            }
        }

        stage('Verify Docker Image') {
            agent {
                label 'worker'
            }
            steps {
                // Étape 5 : Vérifier que le Dockerfile fonctionne
                sh 'docker run --rm monapp:latest'
            }
        }
    }
}
